<%
    require 'json'

    postgres_host = p("postgresql.host", "")
    postgres_port = p("postgresql.port", 0)
    postgres_database = p("postgresql.database", "")
    postgres_role_name = p("postgresql.role.name", "")
    postgres_role_password = p("postgresql.role.password", "")
    postgres_tls_enabled = p("postgresql.tls.enabled", false)
    postgres_tls_skip_host_verify = false
    postgres_tls_ca = ""
    postgres_tls_public_cert = ""
    postgres_tls_private_key = ""

    if postgres_tls_enabled
      postgres_tls_skip_host_verify = p("postgresql.tls.skip_host_verify", false)
      postgres_tls_ca = p("postgresql.tls.cert.ca")
      postgres_tls_public_cert = p("postgresql.tls.cert.certificate")
      postgres_tls_private_key = p("postgresql.tls.cert.private_key")
    end

    if postgres_host.empty?
      if_link("concourse_db") do |cdb|
        postgres_host = cdb.p("postgresql.host", "")
      end

      if postgres_host.empty?
        if_link("postgres") do |postgres|
          postgres_host = postgres.instances.first.address
        end
      end

      if postgres_host.empty?
        raise "postgres.host not found through either properties or links"
      end
    end

    if postgres_database.empty?
      if_link("concourse_db") do |cdb|
        postgres_database = cdb.p("postgresql.database", "")
      end

      if postgres_database.empty?
        postgres_database = "atc"
      end
    end

    if postgres_port.zero?
      if_link("concourse_db") do |cdb|
        postgres_port = cdb.p("postgresql.port", 0)
      end

      if postgres_port.zero?
        if_link("postgres") do |postgres|
          postgres_port = postgres.p("databases.port", 0)
        end
      end

      if postgres_port.zero?
        postgres_port = 5432
      end
    end

    if postgres_role_name.empty?
      if_link("concourse_db") do |cdb|
        postgres_role_name = cdb.p("postgresql.role.name", "")
      end

      if postgres_role_name.empty?
        raise "postgres.role.name not found through either properties or links"
      end
    end

    if postgres_role_password.empty?
      if_link("concourse_db") do |cdb|
        postgres_role_password = cdb.p("postgresql.role.password", "")
      end

      if postgres_role_password.empty?
        raise "postgres.role.password not found through either properties or links"
      end
    end

    if_link("concourse_db") do |cdb|
      postgres_tls_enabled = cdb.p("postgresql.sslmode", postgres_tls_enabled)
      if postgres_tls_enabled
        if postgres_tls_ca.empty?
          postgres_tls_ca = cdb.p("postgresql.ca_cert")
        end

        if postgres_tls_public_cert.empty?
          postgres_tls_public_cert = cdb.p("postgresql.client_cert.certificate")
        end

        if postgres_tls_private_key.empty?
          postgres_tls_private_key = cdb.p("postgresql.client_cert.private_key")
        end
      end
    end
%>
